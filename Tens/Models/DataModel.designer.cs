#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tens.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="marketdb")]
	public partial class DataModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertaddresse_type(addresse_type instance);
    partial void Updateaddresse_type(addresse_type instance);
    partial void Deleteaddresse_type(addresse_type instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    partial void Insertaddress(address instance);
    partial void Updateaddress(address instance);
    partial void Deleteaddress(address instance);
    partial void Insertbrand(brand instance);
    partial void Updatebrand(brand instance);
    partial void Deletebrand(brand instance);
    partial void Insertcountry(country instance);
    partial void Updatecountry(country instance);
    partial void Deletecountry(country instance);
    partial void Insertinventrory_item(inventrory_item instance);
    partial void Updateinventrory_item(inventrory_item instance);
    partial void Deleteinventrory_item(inventrory_item instance);
    partial void Insertitem_category(item_category instance);
    partial void Updateitem_category(item_category instance);
    partial void Deleteitem_category(item_category instance);
    partial void Insertitem_stock_level(item_stock_level instance);
    partial void Updateitem_stock_level(item_stock_level instance);
    partial void Deleteitem_stock_level(item_stock_level instance);
    partial void Insertitem_supplier(item_supplier instance);
    partial void Updateitem_supplier(item_supplier instance);
    partial void Deleteitem_supplier(item_supplier instance);
    partial void Insertperson(person instance);
    partial void Updateperson(person instance);
    partial void Deleteperson(person instance);
    partial void Insertrole(role instance);
    partial void Updaterole(role instance);
    partial void Deleterole(role instance);
    partial void Insertsale(sale instance);
    partial void Updatesale(sale instance);
    partial void Deletesale(sale instance);
    partial void Insertsales_detail(sales_detail instance);
    partial void Updatesales_detail(sales_detail instance);
    partial void Deletesales_detail(sales_detail instance);
    partial void Insertshipped(shipped instance);
    partial void Updateshipped(shipped instance);
    partial void Deleteshipped(shipped instance);
    partial void Insertshipped_detail(shipped_detail instance);
    partial void Updateshipped_detail(shipped_detail instance);
    partial void Deleteshipped_detail(shipped_detail instance);
    partial void Insertsupplier(supplier instance);
    partial void Updatesupplier(supplier instance);
    partial void Deletesupplier(supplier instance);
    partial void Insertsuppliers_address(suppliers_address instance);
    partial void Updatesuppliers_address(suppliers_address instance);
    partial void Deletesuppliers_address(suppliers_address instance);
    #endregion
		
		public DataModelDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["marketdbConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<addresse_type> addresse_types
		{
			get
			{
				return this.GetTable<addresse_type>();
			}
		}
		
		public System.Data.Linq.Table<user> users
		{
			get
			{
				return this.GetTable<user>();
			}
		}
		
		public System.Data.Linq.Table<address> addresses
		{
			get
			{
				return this.GetTable<address>();
			}
		}
		
		public System.Data.Linq.Table<brand> brands
		{
			get
			{
				return this.GetTable<brand>();
			}
		}
		
		public System.Data.Linq.Table<country> countries
		{
			get
			{
				return this.GetTable<country>();
			}
		}
		
		public System.Data.Linq.Table<inventrory_item> inventrory_items
		{
			get
			{
				return this.GetTable<inventrory_item>();
			}
		}
		
		public System.Data.Linq.Table<item_category> item_categories
		{
			get
			{
				return this.GetTable<item_category>();
			}
		}
		
		public System.Data.Linq.Table<item_stock_level> item_stock_levels
		{
			get
			{
				return this.GetTable<item_stock_level>();
			}
		}
		
		public System.Data.Linq.Table<item_supplier> item_suppliers
		{
			get
			{
				return this.GetTable<item_supplier>();
			}
		}
		
		public System.Data.Linq.Table<person> persons
		{
			get
			{
				return this.GetTable<person>();
			}
		}
		
		public System.Data.Linq.Table<role> roles
		{
			get
			{
				return this.GetTable<role>();
			}
		}
		
		public System.Data.Linq.Table<sale> sales
		{
			get
			{
				return this.GetTable<sale>();
			}
		}
		
		public System.Data.Linq.Table<sales_detail> sales_details
		{
			get
			{
				return this.GetTable<sales_detail>();
			}
		}
		
		public System.Data.Linq.Table<shipped> shippeds
		{
			get
			{
				return this.GetTable<shipped>();
			}
		}
		
		public System.Data.Linq.Table<shipped_detail> shipped_details
		{
			get
			{
				return this.GetTable<shipped_detail>();
			}
		}
		
		public System.Data.Linq.Table<supplier> suppliers
		{
			get
			{
				return this.GetTable<supplier>();
			}
		}
		
		public System.Data.Linq.Table<suppliers_address> suppliers_addresses
		{
			get
			{
				return this.GetTable<suppliers_address>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.addresse_types")]
	public partial class addresse_type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _address_type_code;
		
		private string _address_type_description;
		
		private EntitySet<suppliers_address> _suppliers_addresses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onaddress_type_codeChanging(string value);
    partial void Onaddress_type_codeChanged();
    partial void Onaddress_type_descriptionChanging(string value);
    partial void Onaddress_type_descriptionChanged();
    #endregion
		
		public addresse_type()
		{
			this._suppliers_addresses = new EntitySet<suppliers_address>(new Action<suppliers_address>(this.attach_suppliers_addresses), new Action<suppliers_address>(this.detach_suppliers_addresses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address_type_code", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string address_type_code
		{
			get
			{
				return this._address_type_code;
			}
			set
			{
				if ((this._address_type_code != value))
				{
					this.Onaddress_type_codeChanging(value);
					this.SendPropertyChanging();
					this._address_type_code = value;
					this.SendPropertyChanged("address_type_code");
					this.Onaddress_type_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address_type_description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string address_type_description
		{
			get
			{
				return this._address_type_description;
			}
			set
			{
				if ((this._address_type_description != value))
				{
					this.Onaddress_type_descriptionChanging(value);
					this.SendPropertyChanging();
					this._address_type_description = value;
					this.SendPropertyChanged("address_type_description");
					this.Onaddress_type_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="addresse_type_suppliers_address", Storage="_suppliers_addresses", ThisKey="address_type_code", OtherKey="address_type_code")]
		public EntitySet<suppliers_address> suppliers_addresses
		{
			get
			{
				return this._suppliers_addresses;
			}
			set
			{
				this._suppliers_addresses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_suppliers_addresses(suppliers_address entity)
		{
			this.SendPropertyChanging();
			entity.addresse_type = this;
		}
		
		private void detach_suppliers_addresses(suppliers_address entity)
		{
			this.SendPropertyChanging();
			entity.addresse_type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.users")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_user;
		
		private string _username;
		
		private string _password;
		
		private System.Nullable<int> _role_id;
		
		private System.Nullable<int> _person_id;
		
		private System.Nullable<int> _status;
		
		private System.Nullable<System.DateTime> _date_expired;
		
		private EntitySet<sale> _sales;
		
		private EntitySet<shipped> _shippeds;
		
		private EntityRef<person> _person;
		
		private EntityRef<role> _role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_userChanging(int value);
    partial void Onid_userChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onrole_idChanging(System.Nullable<int> value);
    partial void Onrole_idChanged();
    partial void Onperson_idChanging(System.Nullable<int> value);
    partial void Onperson_idChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    partial void Ondate_expiredChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_expiredChanged();
    #endregion
		
		public user()
		{
			this._sales = new EntitySet<sale>(new Action<sale>(this.attach_sales), new Action<sale>(this.detach_sales));
			this._shippeds = new EntitySet<shipped>(new Action<shipped>(this.attach_shippeds), new Action<shipped>(this.detach_shippeds));
			this._person = default(EntityRef<person>);
			this._role = default(EntityRef<role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_user", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_user
		{
			get
			{
				return this._id_user;
			}
			set
			{
				if ((this._id_user != value))
				{
					this.Onid_userChanging(value);
					this.SendPropertyChanging();
					this._id_user = value;
					this.SendPropertyChanged("id_user");
					this.Onid_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role_id", DbType="Int")]
		public System.Nullable<int> role_id
		{
			get
			{
				return this._role_id;
			}
			set
			{
				if ((this._role_id != value))
				{
					if (this._role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onrole_idChanging(value);
					this.SendPropertyChanging();
					this._role_id = value;
					this.SendPropertyChanged("role_id");
					this.Onrole_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_person_id", DbType="Int")]
		public System.Nullable<int> person_id
		{
			get
			{
				return this._person_id;
			}
			set
			{
				if ((this._person_id != value))
				{
					if (this._person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onperson_idChanging(value);
					this.SendPropertyChanging();
					this._person_id = value;
					this.SendPropertyChanged("person_id");
					this.Onperson_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
		public System.Nullable<int> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_expired", DbType="Date")]
		public System.Nullable<System.DateTime> date_expired
		{
			get
			{
				return this._date_expired;
			}
			set
			{
				if ((this._date_expired != value))
				{
					this.Ondate_expiredChanging(value);
					this.SendPropertyChanging();
					this._date_expired = value;
					this.SendPropertyChanged("date_expired");
					this.Ondate_expiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_sale", Storage="_sales", ThisKey="id_user", OtherKey="user_id")]
		public EntitySet<sale> sales
		{
			get
			{
				return this._sales;
			}
			set
			{
				this._sales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_shipped", Storage="_shippeds", ThisKey="id_user", OtherKey="user_id")]
		public EntitySet<shipped> shippeds
		{
			get
			{
				return this._shippeds;
			}
			set
			{
				this._shippeds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="person_user", Storage="_person", ThisKey="person_id", OtherKey="id_person", IsForeignKey=true, DeleteRule="CASCADE")]
		public person person
		{
			get
			{
				return this._person.Entity;
			}
			set
			{
				person previousValue = this._person.Entity;
				if (((previousValue != value) 
							|| (this._person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._person.Entity = null;
						previousValue.users.Remove(this);
					}
					this._person.Entity = value;
					if ((value != null))
					{
						value.users.Add(this);
						this._person_id = value.id_person;
					}
					else
					{
						this._person_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="role_user", Storage="_role", ThisKey="role_id", OtherKey="id_role", IsForeignKey=true, DeleteRule="CASCADE")]
		public role role
		{
			get
			{
				return this._role.Entity;
			}
			set
			{
				role previousValue = this._role.Entity;
				if (((previousValue != value) 
							|| (this._role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._role.Entity = null;
						previousValue.users.Remove(this);
					}
					this._role.Entity = value;
					if ((value != null))
					{
						value.users.Add(this);
						this._role_id = value.id_role;
					}
					else
					{
						this._role_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_sales(sale entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_sales(sale entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_shippeds(shipped entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_shippeds(shipped entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.addresses")]
	public partial class address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_address;
		
		private string _description;
		
		private string _city;
		
		private string _postal_code;
		
		private System.Nullable<int> _country_id;
		
		private string _other_address_details;
		
		private EntitySet<person> _persons;
		
		private EntitySet<suppliers_address> _suppliers_addresses;
		
		private EntityRef<country> _country;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_addressChanging(int value);
    partial void Onid_addressChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void Onpostal_codeChanging(string value);
    partial void Onpostal_codeChanged();
    partial void Oncountry_idChanging(System.Nullable<int> value);
    partial void Oncountry_idChanged();
    partial void Onother_address_detailsChanging(string value);
    partial void Onother_address_detailsChanged();
    #endregion
		
		public address()
		{
			this._persons = new EntitySet<person>(new Action<person>(this.attach_persons), new Action<person>(this.detach_persons));
			this._suppliers_addresses = new EntitySet<suppliers_address>(new Action<suppliers_address>(this.attach_suppliers_addresses), new Action<suppliers_address>(this.detach_suppliers_addresses));
			this._country = default(EntityRef<country>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_address", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_address
		{
			get
			{
				return this._id_address;
			}
			set
			{
				if ((this._id_address != value))
				{
					this.Onid_addressChanging(value);
					this.SendPropertyChanging();
					this._id_address = value;
					this.SendPropertyChanged("id_address");
					this.Onid_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(50)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postal_code", DbType="VarChar(50)")]
		public string postal_code
		{
			get
			{
				return this._postal_code;
			}
			set
			{
				if ((this._postal_code != value))
				{
					this.Onpostal_codeChanging(value);
					this.SendPropertyChanging();
					this._postal_code = value;
					this.SendPropertyChanged("postal_code");
					this.Onpostal_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country_id", DbType="Int")]
		public System.Nullable<int> country_id
		{
			get
			{
				return this._country_id;
			}
			set
			{
				if ((this._country_id != value))
				{
					if (this._country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncountry_idChanging(value);
					this.SendPropertyChanging();
					this._country_id = value;
					this.SendPropertyChanged("country_id");
					this.Oncountry_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_other_address_details", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string other_address_details
		{
			get
			{
				return this._other_address_details;
			}
			set
			{
				if ((this._other_address_details != value))
				{
					this.Onother_address_detailsChanging(value);
					this.SendPropertyChanging();
					this._other_address_details = value;
					this.SendPropertyChanged("other_address_details");
					this.Onother_address_detailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="address_person", Storage="_persons", ThisKey="id_address", OtherKey="address_id")]
		public EntitySet<person> persons
		{
			get
			{
				return this._persons;
			}
			set
			{
				this._persons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="address_suppliers_address", Storage="_suppliers_addresses", ThisKey="id_address", OtherKey="address_id")]
		public EntitySet<suppliers_address> suppliers_addresses
		{
			get
			{
				return this._suppliers_addresses;
			}
			set
			{
				this._suppliers_addresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="country_address", Storage="_country", ThisKey="country_id", OtherKey="id_country", IsForeignKey=true, DeleteRule="CASCADE")]
		public country country
		{
			get
			{
				return this._country.Entity;
			}
			set
			{
				country previousValue = this._country.Entity;
				if (((previousValue != value) 
							|| (this._country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._country.Entity = null;
						previousValue.addresses.Remove(this);
					}
					this._country.Entity = value;
					if ((value != null))
					{
						value.addresses.Add(this);
						this._country_id = value.id_country;
					}
					else
					{
						this._country_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("country");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_persons(person entity)
		{
			this.SendPropertyChanging();
			entity.address = this;
		}
		
		private void detach_persons(person entity)
		{
			this.SendPropertyChanging();
			entity.address = null;
		}
		
		private void attach_suppliers_addresses(suppliers_address entity)
		{
			this.SendPropertyChanging();
			entity.address = this;
		}
		
		private void detach_suppliers_addresses(suppliers_address entity)
		{
			this.SendPropertyChanging();
			entity.address = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.brands")]
	public partial class brand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_brand;
		
		private string _brand_name;
		
		private EntitySet<inventrory_item> _inventrory_items;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_brandChanging(int value);
    partial void Onid_brandChanged();
    partial void Onbrand_nameChanging(string value);
    partial void Onbrand_nameChanged();
    #endregion
		
		public brand()
		{
			this._inventrory_items = new EntitySet<inventrory_item>(new Action<inventrory_item>(this.attach_inventrory_items), new Action<inventrory_item>(this.detach_inventrory_items));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_brand", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_brand
		{
			get
			{
				return this._id_brand;
			}
			set
			{
				if ((this._id_brand != value))
				{
					this.Onid_brandChanging(value);
					this.SendPropertyChanging();
					this._id_brand = value;
					this.SendPropertyChanged("id_brand");
					this.Onid_brandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_brand_name", DbType="VarChar(50)")]
		public string brand_name
		{
			get
			{
				return this._brand_name;
			}
			set
			{
				if ((this._brand_name != value))
				{
					this.Onbrand_nameChanging(value);
					this.SendPropertyChanging();
					this._brand_name = value;
					this.SendPropertyChanged("brand_name");
					this.Onbrand_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="brand_inventrory_item", Storage="_inventrory_items", ThisKey="id_brand", OtherKey="brand_id")]
		public EntitySet<inventrory_item> inventrory_items
		{
			get
			{
				return this._inventrory_items;
			}
			set
			{
				this._inventrory_items.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_inventrory_items(inventrory_item entity)
		{
			this.SendPropertyChanging();
			entity.brand = this;
		}
		
		private void detach_inventrory_items(inventrory_item entity)
		{
			this.SendPropertyChanging();
			entity.brand = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.countries")]
	public partial class country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_country;
		
		private string _country_name;
		
		private EntitySet<address> _addresses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_countryChanging(int value);
    partial void Onid_countryChanged();
    partial void Oncountry_nameChanging(string value);
    partial void Oncountry_nameChanged();
    #endregion
		
		public country()
		{
			this._addresses = new EntitySet<address>(new Action<address>(this.attach_addresses), new Action<address>(this.detach_addresses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_country", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_country
		{
			get
			{
				return this._id_country;
			}
			set
			{
				if ((this._id_country != value))
				{
					this.Onid_countryChanging(value);
					this.SendPropertyChanging();
					this._id_country = value;
					this.SendPropertyChanged("id_country");
					this.Onid_countryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country_name", DbType="VarChar(MAX)")]
		public string country_name
		{
			get
			{
				return this._country_name;
			}
			set
			{
				if ((this._country_name != value))
				{
					this.Oncountry_nameChanging(value);
					this.SendPropertyChanging();
					this._country_name = value;
					this.SendPropertyChanged("country_name");
					this.Oncountry_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="country_address", Storage="_addresses", ThisKey="id_country", OtherKey="country_id")]
		public EntitySet<address> addresses
		{
			get
			{
				return this._addresses;
			}
			set
			{
				this._addresses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_addresses(address entity)
		{
			this.SendPropertyChanging();
			entity.country = this;
		}
		
		private void detach_addresses(address entity)
		{
			this.SendPropertyChanging();
			entity.country = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.inventrory_items")]
	public partial class inventrory_item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_item;
		
		private System.Nullable<int> _brand_id;
		
		private string _item_category_code;
		
		private string _item_description;
		
		private System.Nullable<int> _avarage_montly_usage;
		
		private System.Nullable<int> _recorder_level;
		
		private System.Nullable<int> _recorder_quantity;
		
		private string _other_item_details;
		
		private string _photo;
		
		private EntityRef<item_stock_level> _item_stock_level;
		
		private EntitySet<item_supplier> _item_suppliers;
		
		private EntityRef<brand> _brand;
		
		private EntityRef<item_category> _item_category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_itemChanging(int value);
    partial void Onid_itemChanged();
    partial void Onbrand_idChanging(System.Nullable<int> value);
    partial void Onbrand_idChanged();
    partial void Onitem_category_codeChanging(string value);
    partial void Onitem_category_codeChanged();
    partial void Onitem_descriptionChanging(string value);
    partial void Onitem_descriptionChanged();
    partial void Onavarage_montly_usageChanging(System.Nullable<int> value);
    partial void Onavarage_montly_usageChanged();
    partial void Onrecorder_levelChanging(System.Nullable<int> value);
    partial void Onrecorder_levelChanged();
    partial void Onrecorder_quantityChanging(System.Nullable<int> value);
    partial void Onrecorder_quantityChanged();
    partial void Onother_item_detailsChanging(string value);
    partial void Onother_item_detailsChanged();
    partial void OnphotoChanging(string value);
    partial void OnphotoChanged();
    #endregion
		
		public inventrory_item()
		{
			this._item_stock_level = default(EntityRef<item_stock_level>);
			this._item_suppliers = new EntitySet<item_supplier>(new Action<item_supplier>(this.attach_item_suppliers), new Action<item_supplier>(this.detach_item_suppliers));
			this._brand = default(EntityRef<brand>);
			this._item_category = default(EntityRef<item_category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_item", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_item
		{
			get
			{
				return this._id_item;
			}
			set
			{
				if ((this._id_item != value))
				{
					this.Onid_itemChanging(value);
					this.SendPropertyChanging();
					this._id_item = value;
					this.SendPropertyChanged("id_item");
					this.Onid_itemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_brand_id", DbType="Int")]
		public System.Nullable<int> brand_id
		{
			get
			{
				return this._brand_id;
			}
			set
			{
				if ((this._brand_id != value))
				{
					if (this._brand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbrand_idChanging(value);
					this.SendPropertyChanging();
					this._brand_id = value;
					this.SendPropertyChanged("brand_id");
					this.Onbrand_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_category_code", DbType="Char(4)")]
		public string item_category_code
		{
			get
			{
				return this._item_category_code;
			}
			set
			{
				if ((this._item_category_code != value))
				{
					if (this._item_category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onitem_category_codeChanging(value);
					this.SendPropertyChanging();
					this._item_category_code = value;
					this.SendPropertyChanged("item_category_code");
					this.Onitem_category_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string item_description
		{
			get
			{
				return this._item_description;
			}
			set
			{
				if ((this._item_description != value))
				{
					this.Onitem_descriptionChanging(value);
					this.SendPropertyChanging();
					this._item_description = value;
					this.SendPropertyChanged("item_description");
					this.Onitem_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_avarage_montly_usage", DbType="Int")]
		public System.Nullable<int> avarage_montly_usage
		{
			get
			{
				return this._avarage_montly_usage;
			}
			set
			{
				if ((this._avarage_montly_usage != value))
				{
					this.Onavarage_montly_usageChanging(value);
					this.SendPropertyChanging();
					this._avarage_montly_usage = value;
					this.SendPropertyChanged("avarage_montly_usage");
					this.Onavarage_montly_usageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recorder_level", DbType="Int")]
		public System.Nullable<int> recorder_level
		{
			get
			{
				return this._recorder_level;
			}
			set
			{
				if ((this._recorder_level != value))
				{
					this.Onrecorder_levelChanging(value);
					this.SendPropertyChanging();
					this._recorder_level = value;
					this.SendPropertyChanged("recorder_level");
					this.Onrecorder_levelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recorder_quantity", DbType="Int")]
		public System.Nullable<int> recorder_quantity
		{
			get
			{
				return this._recorder_quantity;
			}
			set
			{
				if ((this._recorder_quantity != value))
				{
					this.Onrecorder_quantityChanging(value);
					this.SendPropertyChanging();
					this._recorder_quantity = value;
					this.SendPropertyChanged("recorder_quantity");
					this.Onrecorder_quantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_other_item_details", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string other_item_details
		{
			get
			{
				return this._other_item_details;
			}
			set
			{
				if ((this._other_item_details != value))
				{
					this.Onother_item_detailsChanging(value);
					this.SendPropertyChanging();
					this._other_item_details = value;
					this.SendPropertyChanged("other_item_details");
					this.Onother_item_detailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_photo", DbType="NVarChar(50)")]
		public string photo
		{
			get
			{
				return this._photo;
			}
			set
			{
				if ((this._photo != value))
				{
					this.OnphotoChanging(value);
					this.SendPropertyChanging();
					this._photo = value;
					this.SendPropertyChanged("photo");
					this.OnphotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="inventrory_item_item_stock_level", Storage="_item_stock_level", ThisKey="id_item", OtherKey="item_id", IsUnique=true, IsForeignKey=false)]
		public item_stock_level item_stock_level
		{
			get
			{
				return this._item_stock_level.Entity;
			}
			set
			{
				item_stock_level previousValue = this._item_stock_level.Entity;
				if (((previousValue != value) 
							|| (this._item_stock_level.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._item_stock_level.Entity = null;
						previousValue.inventrory_item = null;
					}
					this._item_stock_level.Entity = value;
					if ((value != null))
					{
						value.inventrory_item = this;
					}
					this.SendPropertyChanged("item_stock_level");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="inventrory_item_item_supplier", Storage="_item_suppliers", ThisKey="id_item", OtherKey="item_id")]
		public EntitySet<item_supplier> item_suppliers
		{
			get
			{
				return this._item_suppliers;
			}
			set
			{
				this._item_suppliers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="brand_inventrory_item", Storage="_brand", ThisKey="brand_id", OtherKey="id_brand", IsForeignKey=true, DeleteRule="CASCADE")]
		public brand brand
		{
			get
			{
				return this._brand.Entity;
			}
			set
			{
				brand previousValue = this._brand.Entity;
				if (((previousValue != value) 
							|| (this._brand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._brand.Entity = null;
						previousValue.inventrory_items.Remove(this);
					}
					this._brand.Entity = value;
					if ((value != null))
					{
						value.inventrory_items.Add(this);
						this._brand_id = value.id_brand;
					}
					else
					{
						this._brand_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("brand");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_category_inventrory_item", Storage="_item_category", ThisKey="item_category_code", OtherKey="item_category_code", IsForeignKey=true, DeleteRule="CASCADE")]
		public item_category item_category
		{
			get
			{
				return this._item_category.Entity;
			}
			set
			{
				item_category previousValue = this._item_category.Entity;
				if (((previousValue != value) 
							|| (this._item_category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._item_category.Entity = null;
						previousValue.inventrory_items.Remove(this);
					}
					this._item_category.Entity = value;
					if ((value != null))
					{
						value.inventrory_items.Add(this);
						this._item_category_code = value.item_category_code;
					}
					else
					{
						this._item_category_code = default(string);
					}
					this.SendPropertyChanged("item_category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_item_suppliers(item_supplier entity)
		{
			this.SendPropertyChanging();
			entity.inventrory_item = this;
		}
		
		private void detach_item_suppliers(item_supplier entity)
		{
			this.SendPropertyChanging();
			entity.inventrory_item = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.item_categories")]
	public partial class item_category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _item_category_code;
		
		private string _category_description;
		
		private EntitySet<inventrory_item> _inventrory_items;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onitem_category_codeChanging(string value);
    partial void Onitem_category_codeChanged();
    partial void Oncategory_descriptionChanging(string value);
    partial void Oncategory_descriptionChanged();
    #endregion
		
		public item_category()
		{
			this._inventrory_items = new EntitySet<inventrory_item>(new Action<inventrory_item>(this.attach_inventrory_items), new Action<inventrory_item>(this.detach_inventrory_items));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_category_code", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string item_category_code
		{
			get
			{
				return this._item_category_code;
			}
			set
			{
				if ((this._item_category_code != value))
				{
					this.Onitem_category_codeChanging(value);
					this.SendPropertyChanging();
					this._item_category_code = value;
					this.SendPropertyChanged("item_category_code");
					this.Onitem_category_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string category_description
		{
			get
			{
				return this._category_description;
			}
			set
			{
				if ((this._category_description != value))
				{
					this.Oncategory_descriptionChanging(value);
					this.SendPropertyChanging();
					this._category_description = value;
					this.SendPropertyChanged("category_description");
					this.Oncategory_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_category_inventrory_item", Storage="_inventrory_items", ThisKey="item_category_code", OtherKey="item_category_code")]
		public EntitySet<inventrory_item> inventrory_items
		{
			get
			{
				return this._inventrory_items;
			}
			set
			{
				this._inventrory_items.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_inventrory_items(inventrory_item entity)
		{
			this.SendPropertyChanging();
			entity.item_category = this;
		}
		
		private void detach_inventrory_items(inventrory_item entity)
		{
			this.SendPropertyChanging();
			entity.item_category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.item_stock_levels")]
	public partial class item_stock_level : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _item_id;
		
		private System.Nullable<int> _stocking_taking_date;
		
		private System.Nullable<int> _quantity_in_stock;
		
		private EntityRef<inventrory_item> _inventrory_item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onitem_idChanging(int value);
    partial void Onitem_idChanged();
    partial void Onstocking_taking_dateChanging(System.Nullable<int> value);
    partial void Onstocking_taking_dateChanged();
    partial void Onquantity_in_stockChanging(System.Nullable<int> value);
    partial void Onquantity_in_stockChanged();
    #endregion
		
		public item_stock_level()
		{
			this._inventrory_item = default(EntityRef<inventrory_item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int item_id
		{
			get
			{
				return this._item_id;
			}
			set
			{
				if ((this._item_id != value))
				{
					if (this._inventrory_item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onitem_idChanging(value);
					this.SendPropertyChanging();
					this._item_id = value;
					this.SendPropertyChanged("item_id");
					this.Onitem_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stocking_taking_date", DbType="Int")]
		public System.Nullable<int> stocking_taking_date
		{
			get
			{
				return this._stocking_taking_date;
			}
			set
			{
				if ((this._stocking_taking_date != value))
				{
					this.Onstocking_taking_dateChanging(value);
					this.SendPropertyChanging();
					this._stocking_taking_date = value;
					this.SendPropertyChanged("stocking_taking_date");
					this.Onstocking_taking_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity_in_stock", DbType="Int")]
		public System.Nullable<int> quantity_in_stock
		{
			get
			{
				return this._quantity_in_stock;
			}
			set
			{
				if ((this._quantity_in_stock != value))
				{
					this.Onquantity_in_stockChanging(value);
					this.SendPropertyChanging();
					this._quantity_in_stock = value;
					this.SendPropertyChanged("quantity_in_stock");
					this.Onquantity_in_stockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="inventrory_item_item_stock_level", Storage="_inventrory_item", ThisKey="item_id", OtherKey="id_item", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public inventrory_item inventrory_item
		{
			get
			{
				return this._inventrory_item.Entity;
			}
			set
			{
				inventrory_item previousValue = this._inventrory_item.Entity;
				if (((previousValue != value) 
							|| (this._inventrory_item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._inventrory_item.Entity = null;
						previousValue.item_stock_level = null;
					}
					this._inventrory_item.Entity = value;
					if ((value != null))
					{
						value.item_stock_level = this;
						this._item_id = value.id_item;
					}
					else
					{
						this._item_id = default(int);
					}
					this.SendPropertyChanged("inventrory_item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.item_suppliers")]
	public partial class item_supplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _item_id;
		
		private int _supplier_id;
		
		private System.Nullable<int> _value_supplied_to_date;
		
		private System.Nullable<int> _total_quantity_supplied_to_date;
		
		private System.Nullable<int> _first_item_supplied_to_date;
		
		private System.Nullable<int> _last_item_supplied_to_date;
		
		private System.Nullable<System.TimeSpan> _delivery_lead_time;
		
		private System.Nullable<decimal> _standard_price;
		
		private System.Nullable<decimal> _percentage_discount;
		
		private System.Nullable<int> _minimum_order_quantity;
		
		private System.Nullable<int> _maximum_order_quantity;
		
		private string _other_item_supplier_details;
		
		private EntityRef<inventrory_item> _inventrory_item;
		
		private EntityRef<supplier> _supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onitem_idChanging(int value);
    partial void Onitem_idChanged();
    partial void Onsupplier_idChanging(int value);
    partial void Onsupplier_idChanged();
    partial void Onvalue_supplied_to_dateChanging(System.Nullable<int> value);
    partial void Onvalue_supplied_to_dateChanged();
    partial void Ontotal_quantity_supplied_to_dateChanging(System.Nullable<int> value);
    partial void Ontotal_quantity_supplied_to_dateChanged();
    partial void Onfirst_item_supplied_to_dateChanging(System.Nullable<int> value);
    partial void Onfirst_item_supplied_to_dateChanged();
    partial void Onlast_item_supplied_to_dateChanging(System.Nullable<int> value);
    partial void Onlast_item_supplied_to_dateChanged();
    partial void Ondelivery_lead_timeChanging(System.Nullable<System.TimeSpan> value);
    partial void Ondelivery_lead_timeChanged();
    partial void Onstandard_priceChanging(System.Nullable<decimal> value);
    partial void Onstandard_priceChanged();
    partial void Onpercentage_discountChanging(System.Nullable<decimal> value);
    partial void Onpercentage_discountChanged();
    partial void Onminimum_order_quantityChanging(System.Nullable<int> value);
    partial void Onminimum_order_quantityChanged();
    partial void Onmaximum_order_quantityChanging(System.Nullable<int> value);
    partial void Onmaximum_order_quantityChanged();
    partial void Onother_item_supplier_detailsChanging(string value);
    partial void Onother_item_supplier_detailsChanged();
    #endregion
		
		public item_supplier()
		{
			this._inventrory_item = default(EntityRef<inventrory_item>);
			this._supplier = default(EntityRef<supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int item_id
		{
			get
			{
				return this._item_id;
			}
			set
			{
				if ((this._item_id != value))
				{
					if (this._inventrory_item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onitem_idChanging(value);
					this.SendPropertyChanging();
					this._item_id = value;
					this.SendPropertyChanged("item_id");
					this.Onitem_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplier_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int supplier_id
		{
			get
			{
				return this._supplier_id;
			}
			set
			{
				if ((this._supplier_id != value))
				{
					if (this._supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsupplier_idChanging(value);
					this.SendPropertyChanging();
					this._supplier_id = value;
					this.SendPropertyChanged("supplier_id");
					this.Onsupplier_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value_supplied_to_date", DbType="Int")]
		public System.Nullable<int> value_supplied_to_date
		{
			get
			{
				return this._value_supplied_to_date;
			}
			set
			{
				if ((this._value_supplied_to_date != value))
				{
					this.Onvalue_supplied_to_dateChanging(value);
					this.SendPropertyChanging();
					this._value_supplied_to_date = value;
					this.SendPropertyChanged("value_supplied_to_date");
					this.Onvalue_supplied_to_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_quantity_supplied_to_date", DbType="Int")]
		public System.Nullable<int> total_quantity_supplied_to_date
		{
			get
			{
				return this._total_quantity_supplied_to_date;
			}
			set
			{
				if ((this._total_quantity_supplied_to_date != value))
				{
					this.Ontotal_quantity_supplied_to_dateChanging(value);
					this.SendPropertyChanging();
					this._total_quantity_supplied_to_date = value;
					this.SendPropertyChanged("total_quantity_supplied_to_date");
					this.Ontotal_quantity_supplied_to_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_item_supplied_to_date", DbType="Int")]
		public System.Nullable<int> first_item_supplied_to_date
		{
			get
			{
				return this._first_item_supplied_to_date;
			}
			set
			{
				if ((this._first_item_supplied_to_date != value))
				{
					this.Onfirst_item_supplied_to_dateChanging(value);
					this.SendPropertyChanging();
					this._first_item_supplied_to_date = value;
					this.SendPropertyChanged("first_item_supplied_to_date");
					this.Onfirst_item_supplied_to_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_item_supplied_to_date", DbType="Int")]
		public System.Nullable<int> last_item_supplied_to_date
		{
			get
			{
				return this._last_item_supplied_to_date;
			}
			set
			{
				if ((this._last_item_supplied_to_date != value))
				{
					this.Onlast_item_supplied_to_dateChanging(value);
					this.SendPropertyChanging();
					this._last_item_supplied_to_date = value;
					this.SendPropertyChanged("last_item_supplied_to_date");
					this.Onlast_item_supplied_to_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_delivery_lead_time", DbType="Time")]
		public System.Nullable<System.TimeSpan> delivery_lead_time
		{
			get
			{
				return this._delivery_lead_time;
			}
			set
			{
				if ((this._delivery_lead_time != value))
				{
					this.Ondelivery_lead_timeChanging(value);
					this.SendPropertyChanging();
					this._delivery_lead_time = value;
					this.SendPropertyChanged("delivery_lead_time");
					this.Ondelivery_lead_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_standard_price", DbType="Money")]
		public System.Nullable<decimal> standard_price
		{
			get
			{
				return this._standard_price;
			}
			set
			{
				if ((this._standard_price != value))
				{
					this.Onstandard_priceChanging(value);
					this.SendPropertyChanging();
					this._standard_price = value;
					this.SendPropertyChanged("standard_price");
					this.Onstandard_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_percentage_discount", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> percentage_discount
		{
			get
			{
				return this._percentage_discount;
			}
			set
			{
				if ((this._percentage_discount != value))
				{
					this.Onpercentage_discountChanging(value);
					this.SendPropertyChanging();
					this._percentage_discount = value;
					this.SendPropertyChanged("percentage_discount");
					this.Onpercentage_discountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_minimum_order_quantity", DbType="Int")]
		public System.Nullable<int> minimum_order_quantity
		{
			get
			{
				return this._minimum_order_quantity;
			}
			set
			{
				if ((this._minimum_order_quantity != value))
				{
					this.Onminimum_order_quantityChanging(value);
					this.SendPropertyChanging();
					this._minimum_order_quantity = value;
					this.SendPropertyChanged("minimum_order_quantity");
					this.Onminimum_order_quantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maximum_order_quantity", DbType="Int")]
		public System.Nullable<int> maximum_order_quantity
		{
			get
			{
				return this._maximum_order_quantity;
			}
			set
			{
				if ((this._maximum_order_quantity != value))
				{
					this.Onmaximum_order_quantityChanging(value);
					this.SendPropertyChanging();
					this._maximum_order_quantity = value;
					this.SendPropertyChanged("maximum_order_quantity");
					this.Onmaximum_order_quantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_other_item_supplier_details", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string other_item_supplier_details
		{
			get
			{
				return this._other_item_supplier_details;
			}
			set
			{
				if ((this._other_item_supplier_details != value))
				{
					this.Onother_item_supplier_detailsChanging(value);
					this.SendPropertyChanging();
					this._other_item_supplier_details = value;
					this.SendPropertyChanged("other_item_supplier_details");
					this.Onother_item_supplier_detailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="inventrory_item_item_supplier", Storage="_inventrory_item", ThisKey="item_id", OtherKey="id_item", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public inventrory_item inventrory_item
		{
			get
			{
				return this._inventrory_item.Entity;
			}
			set
			{
				inventrory_item previousValue = this._inventrory_item.Entity;
				if (((previousValue != value) 
							|| (this._inventrory_item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._inventrory_item.Entity = null;
						previousValue.item_suppliers.Remove(this);
					}
					this._inventrory_item.Entity = value;
					if ((value != null))
					{
						value.item_suppliers.Add(this);
						this._item_id = value.id_item;
					}
					else
					{
						this._item_id = default(int);
					}
					this.SendPropertyChanged("inventrory_item");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="supplier_item_supplier", Storage="_supplier", ThisKey="supplier_id", OtherKey="id_supplier", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public supplier supplier
		{
			get
			{
				return this._supplier.Entity;
			}
			set
			{
				supplier previousValue = this._supplier.Entity;
				if (((previousValue != value) 
							|| (this._supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._supplier.Entity = null;
						previousValue.item_suppliers.Remove(this);
					}
					this._supplier.Entity = value;
					if ((value != null))
					{
						value.item_suppliers.Add(this);
						this._supplier_id = value.id_supplier;
					}
					else
					{
						this._supplier_id = default(int);
					}
					this.SendPropertyChanged("supplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.persons")]
	public partial class person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_person;
		
		private string _person_name;
		
		private System.Nullable<int> _gender;
		
		private string _phone;
		
		private string _cellphone;
		
		private string _email;
		
		private System.Nullable<int> _address_id;
		
		private string _image;
		
		private EntitySet<user> _users;
		
		private EntityRef<address> _address;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_personChanging(int value);
    partial void Onid_personChanged();
    partial void Onperson_nameChanging(string value);
    partial void Onperson_nameChanged();
    partial void OngenderChanging(System.Nullable<int> value);
    partial void OngenderChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OncellphoneChanging(string value);
    partial void OncellphoneChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Onaddress_idChanging(System.Nullable<int> value);
    partial void Onaddress_idChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    #endregion
		
		public person()
		{
			this._users = new EntitySet<user>(new Action<user>(this.attach_users), new Action<user>(this.detach_users));
			this._address = default(EntityRef<address>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_person", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_person
		{
			get
			{
				return this._id_person;
			}
			set
			{
				if ((this._id_person != value))
				{
					this.Onid_personChanging(value);
					this.SendPropertyChanging();
					this._id_person = value;
					this.SendPropertyChanged("id_person");
					this.Onid_personChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_person_name", DbType="VarChar(50)")]
		public string person_name
		{
			get
			{
				return this._person_name;
			}
			set
			{
				if ((this._person_name != value))
				{
					this.Onperson_nameChanging(value);
					this.SendPropertyChanging();
					this._person_name = value;
					this.SendPropertyChanged("person_name");
					this.Onperson_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="Int")]
		public System.Nullable<int> gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(50)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cellphone", DbType="VarChar(50)")]
		public string cellphone
		{
			get
			{
				return this._cellphone;
			}
			set
			{
				if ((this._cellphone != value))
				{
					this.OncellphoneChanging(value);
					this.SendPropertyChanging();
					this._cellphone = value;
					this.SendPropertyChanged("cellphone");
					this.OncellphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address_id", DbType="Int")]
		public System.Nullable<int> address_id
		{
			get
			{
				return this._address_id;
			}
			set
			{
				if ((this._address_id != value))
				{
					if (this._address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onaddress_idChanging(value);
					this.SendPropertyChanging();
					this._address_id = value;
					this.SendPropertyChanged("address_id");
					this.Onaddress_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="VarChar(50)")]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="person_user", Storage="_users", ThisKey="id_person", OtherKey="person_id")]
		public EntitySet<user> users
		{
			get
			{
				return this._users;
			}
			set
			{
				this._users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="address_person", Storage="_address", ThisKey="address_id", OtherKey="id_address", IsForeignKey=true, DeleteRule="CASCADE")]
		public address address
		{
			get
			{
				return this._address.Entity;
			}
			set
			{
				address previousValue = this._address.Entity;
				if (((previousValue != value) 
							|| (this._address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._address.Entity = null;
						previousValue.persons.Remove(this);
					}
					this._address.Entity = value;
					if ((value != null))
					{
						value.persons.Add(this);
						this._address_id = value.id_address;
					}
					else
					{
						this._address_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("address");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_users(user entity)
		{
			this.SendPropertyChanging();
			entity.person = this;
		}
		
		private void detach_users(user entity)
		{
			this.SendPropertyChanging();
			entity.person = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.roles")]
	public partial class role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_role;
		
		private string _role_name;
		
		private EntitySet<user> _users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_roleChanging(int value);
    partial void Onid_roleChanged();
    partial void Onrole_nameChanging(string value);
    partial void Onrole_nameChanged();
    #endregion
		
		public role()
		{
			this._users = new EntitySet<user>(new Action<user>(this.attach_users), new Action<user>(this.detach_users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_role", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_role
		{
			get
			{
				return this._id_role;
			}
			set
			{
				if ((this._id_role != value))
				{
					this.Onid_roleChanging(value);
					this.SendPropertyChanging();
					this._id_role = value;
					this.SendPropertyChanged("id_role");
					this.Onid_roleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role_name", DbType="VarChar(50)")]
		public string role_name
		{
			get
			{
				return this._role_name;
			}
			set
			{
				if ((this._role_name != value))
				{
					this.Onrole_nameChanging(value);
					this.SendPropertyChanging();
					this._role_name = value;
					this.SendPropertyChanged("role_name");
					this.Onrole_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="role_user", Storage="_users", ThisKey="id_role", OtherKey="role_id")]
		public EntitySet<user> users
		{
			get
			{
				return this._users;
			}
			set
			{
				this._users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_users(user entity)
		{
			this.SendPropertyChanging();
			entity.role = this;
		}
		
		private void detach_users(user entity)
		{
			this.SendPropertyChanging();
			entity.role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sales")]
	public partial class sale : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_sales;
		
		private System.Nullable<System.DateTime> _date_transaction;
		
		private string _code_sales;
		
		private System.Nullable<int> _user_id;
		
		private System.Nullable<decimal> _disc;
		
		private System.Nullable<decimal> _sub_total;
		
		private System.Nullable<decimal> _grand_total;
		
		private System.Nullable<decimal> _tax;
		
		private EntitySet<sales_detail> _sales_details;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_salesChanging(int value);
    partial void Onid_salesChanged();
    partial void Ondate_transactionChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_transactionChanged();
    partial void Oncode_salesChanging(string value);
    partial void Oncode_salesChanged();
    partial void Onuser_idChanging(System.Nullable<int> value);
    partial void Onuser_idChanged();
    partial void OndiscChanging(System.Nullable<decimal> value);
    partial void OndiscChanged();
    partial void Onsub_totalChanging(System.Nullable<decimal> value);
    partial void Onsub_totalChanged();
    partial void Ongrand_totalChanging(System.Nullable<decimal> value);
    partial void Ongrand_totalChanged();
    partial void OntaxChanging(System.Nullable<decimal> value);
    partial void OntaxChanged();
    #endregion
		
		public sale()
		{
			this._sales_details = new EntitySet<sales_detail>(new Action<sales_detail>(this.attach_sales_details), new Action<sales_detail>(this.detach_sales_details));
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_sales", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_sales
		{
			get
			{
				return this._id_sales;
			}
			set
			{
				if ((this._id_sales != value))
				{
					this.Onid_salesChanging(value);
					this.SendPropertyChanging();
					this._id_sales = value;
					this.SendPropertyChanged("id_sales");
					this.Onid_salesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_transaction", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_transaction
		{
			get
			{
				return this._date_transaction;
			}
			set
			{
				if ((this._date_transaction != value))
				{
					this.Ondate_transactionChanging(value);
					this.SendPropertyChanging();
					this._date_transaction = value;
					this.SendPropertyChanged("date_transaction");
					this.Ondate_transactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code_sales", DbType="Char(10)")]
		public string code_sales
		{
			get
			{
				return this._code_sales;
			}
			set
			{
				if ((this._code_sales != value))
				{
					this.Oncode_salesChanging(value);
					this.SendPropertyChanging();
					this._code_sales = value;
					this.SendPropertyChanged("code_sales");
					this.Oncode_salesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int")]
		public System.Nullable<int> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disc", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> disc
		{
			get
			{
				return this._disc;
			}
			set
			{
				if ((this._disc != value))
				{
					this.OndiscChanging(value);
					this.SendPropertyChanging();
					this._disc = value;
					this.SendPropertyChanged("disc");
					this.OndiscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sub_total", DbType="Money")]
		public System.Nullable<decimal> sub_total
		{
			get
			{
				return this._sub_total;
			}
			set
			{
				if ((this._sub_total != value))
				{
					this.Onsub_totalChanging(value);
					this.SendPropertyChanging();
					this._sub_total = value;
					this.SendPropertyChanged("sub_total");
					this.Onsub_totalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grand_total", DbType="Money")]
		public System.Nullable<decimal> grand_total
		{
			get
			{
				return this._grand_total;
			}
			set
			{
				if ((this._grand_total != value))
				{
					this.Ongrand_totalChanging(value);
					this.SendPropertyChanging();
					this._grand_total = value;
					this.SendPropertyChanged("grand_total");
					this.Ongrand_totalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tax", DbType="Money")]
		public System.Nullable<decimal> tax
		{
			get
			{
				return this._tax;
			}
			set
			{
				if ((this._tax != value))
				{
					this.OntaxChanging(value);
					this.SendPropertyChanging();
					this._tax = value;
					this.SendPropertyChanged("tax");
					this.OntaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sale_sales_detail", Storage="_sales_details", ThisKey="id_sales", OtherKey="sales_id")]
		public EntitySet<sales_detail> sales_details
		{
			get
			{
				return this._sales_details;
			}
			set
			{
				this._sales_details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_sale", Storage="_user", ThisKey="user_id", OtherKey="id_user", IsForeignKey=true, DeleteRule="CASCADE")]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.sales.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.sales.Add(this);
						this._user_id = value.id_user;
					}
					else
					{
						this._user_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_sales_details(sales_detail entity)
		{
			this.SendPropertyChanging();
			entity.sale = this;
		}
		
		private void detach_sales_details(sales_detail entity)
		{
			this.SendPropertyChanging();
			entity.sale = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sales_details")]
	public partial class sales_detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _sales_id;
		
		private string _item_name;
		
		private System.Nullable<decimal> _item_price;
		
		private System.Nullable<int> _item_qty;
		
		private System.Nullable<decimal> _total;
		
		private EntityRef<sale> _sale;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onsales_idChanging(int value);
    partial void Onsales_idChanged();
    partial void Onitem_nameChanging(string value);
    partial void Onitem_nameChanged();
    partial void Onitem_priceChanging(System.Nullable<decimal> value);
    partial void Onitem_priceChanged();
    partial void Onitem_qtyChanging(System.Nullable<int> value);
    partial void Onitem_qtyChanged();
    partial void OntotalChanging(System.Nullable<decimal> value);
    partial void OntotalChanged();
    #endregion
		
		public sales_detail()
		{
			this._sale = default(EntityRef<sale>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sales_id", DbType="Int NOT NULL")]
		public int sales_id
		{
			get
			{
				return this._sales_id;
			}
			set
			{
				if ((this._sales_id != value))
				{
					if (this._sale.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsales_idChanging(value);
					this.SendPropertyChanging();
					this._sales_id = value;
					this.SendPropertyChanged("sales_id");
					this.Onsales_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_name", DbType="NVarChar(50)")]
		public string item_name
		{
			get
			{
				return this._item_name;
			}
			set
			{
				if ((this._item_name != value))
				{
					this.Onitem_nameChanging(value);
					this.SendPropertyChanging();
					this._item_name = value;
					this.SendPropertyChanged("item_name");
					this.Onitem_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_price", DbType="Money")]
		public System.Nullable<decimal> item_price
		{
			get
			{
				return this._item_price;
			}
			set
			{
				if ((this._item_price != value))
				{
					this.Onitem_priceChanging(value);
					this.SendPropertyChanging();
					this._item_price = value;
					this.SendPropertyChanged("item_price");
					this.Onitem_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_qty", DbType="Int")]
		public System.Nullable<int> item_qty
		{
			get
			{
				return this._item_qty;
			}
			set
			{
				if ((this._item_qty != value))
				{
					this.Onitem_qtyChanging(value);
					this.SendPropertyChanging();
					this._item_qty = value;
					this.SendPropertyChanged("item_qty");
					this.Onitem_qtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total", DbType="Money")]
		public System.Nullable<decimal> total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this.OntotalChanging(value);
					this.SendPropertyChanging();
					this._total = value;
					this.SendPropertyChanged("total");
					this.OntotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sale_sales_detail", Storage="_sale", ThisKey="sales_id", OtherKey="id_sales", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public sale sale
		{
			get
			{
				return this._sale.Entity;
			}
			set
			{
				sale previousValue = this._sale.Entity;
				if (((previousValue != value) 
							|| (this._sale.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._sale.Entity = null;
						previousValue.sales_details.Remove(this);
					}
					this._sale.Entity = value;
					if ((value != null))
					{
						value.sales_details.Add(this);
						this._sales_id = value.id_sales;
					}
					else
					{
						this._sales_id = default(int);
					}
					this.SendPropertyChanged("sale");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.shipped")]
	public partial class shipped : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_shipped;
		
		private string _code_shipped;
		
		private System.Nullable<int> _supplier_id;
		
		private System.Nullable<System.DateTime> _date_transaction;
		
		private System.Nullable<int> _user_id;
		
		private System.Nullable<int> _status;
		
		private System.Nullable<decimal> _disc;
		
		private System.Nullable<decimal> _sub_total;
		
		private System.Nullable<decimal> _grand_totall;
		
		private EntitySet<shipped_detail> _shipped_details;
		
		private EntityRef<user> _user;
		
		private EntityRef<supplier> _supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_shippedChanging(int value);
    partial void Onid_shippedChanged();
    partial void Oncode_shippedChanging(string value);
    partial void Oncode_shippedChanged();
    partial void Onsupplier_idChanging(System.Nullable<int> value);
    partial void Onsupplier_idChanged();
    partial void Ondate_transactionChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_transactionChanged();
    partial void Onuser_idChanging(System.Nullable<int> value);
    partial void Onuser_idChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    partial void OndiscChanging(System.Nullable<decimal> value);
    partial void OndiscChanged();
    partial void Onsub_totalChanging(System.Nullable<decimal> value);
    partial void Onsub_totalChanged();
    partial void Ongrand_totallChanging(System.Nullable<decimal> value);
    partial void Ongrand_totallChanged();
    #endregion
		
		public shipped()
		{
			this._shipped_details = new EntitySet<shipped_detail>(new Action<shipped_detail>(this.attach_shipped_details), new Action<shipped_detail>(this.detach_shipped_details));
			this._user = default(EntityRef<user>);
			this._supplier = default(EntityRef<supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_shipped", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_shipped
		{
			get
			{
				return this._id_shipped;
			}
			set
			{
				if ((this._id_shipped != value))
				{
					this.Onid_shippedChanging(value);
					this.SendPropertyChanging();
					this._id_shipped = value;
					this.SendPropertyChanged("id_shipped");
					this.Onid_shippedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code_shipped", DbType="Char(10)")]
		public string code_shipped
		{
			get
			{
				return this._code_shipped;
			}
			set
			{
				if ((this._code_shipped != value))
				{
					this.Oncode_shippedChanging(value);
					this.SendPropertyChanging();
					this._code_shipped = value;
					this.SendPropertyChanged("code_shipped");
					this.Oncode_shippedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplier_id", DbType="Int")]
		public System.Nullable<int> supplier_id
		{
			get
			{
				return this._supplier_id;
			}
			set
			{
				if ((this._supplier_id != value))
				{
					if (this._supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsupplier_idChanging(value);
					this.SendPropertyChanging();
					this._supplier_id = value;
					this.SendPropertyChanged("supplier_id");
					this.Onsupplier_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_transaction", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_transaction
		{
			get
			{
				return this._date_transaction;
			}
			set
			{
				if ((this._date_transaction != value))
				{
					this.Ondate_transactionChanging(value);
					this.SendPropertyChanging();
					this._date_transaction = value;
					this.SendPropertyChanged("date_transaction");
					this.Ondate_transactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int")]
		public System.Nullable<int> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
		public System.Nullable<int> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disc", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> disc
		{
			get
			{
				return this._disc;
			}
			set
			{
				if ((this._disc != value))
				{
					this.OndiscChanging(value);
					this.SendPropertyChanging();
					this._disc = value;
					this.SendPropertyChanged("disc");
					this.OndiscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sub_total", DbType="Money")]
		public System.Nullable<decimal> sub_total
		{
			get
			{
				return this._sub_total;
			}
			set
			{
				if ((this._sub_total != value))
				{
					this.Onsub_totalChanging(value);
					this.SendPropertyChanging();
					this._sub_total = value;
					this.SendPropertyChanged("sub_total");
					this.Onsub_totalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grand_totall", DbType="Money")]
		public System.Nullable<decimal> grand_totall
		{
			get
			{
				return this._grand_totall;
			}
			set
			{
				if ((this._grand_totall != value))
				{
					this.Ongrand_totallChanging(value);
					this.SendPropertyChanging();
					this._grand_totall = value;
					this.SendPropertyChanged("grand_totall");
					this.Ongrand_totallChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="shipped_shipped_detail", Storage="_shipped_details", ThisKey="id_shipped", OtherKey="shipped_id")]
		public EntitySet<shipped_detail> shipped_details
		{
			get
			{
				return this._shipped_details;
			}
			set
			{
				this._shipped_details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_shipped", Storage="_user", ThisKey="user_id", OtherKey="id_user", IsForeignKey=true, DeleteRule="CASCADE")]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.shippeds.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.shippeds.Add(this);
						this._user_id = value.id_user;
					}
					else
					{
						this._user_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="supplier_shipped", Storage="_supplier", ThisKey="supplier_id", OtherKey="id_supplier", IsForeignKey=true, DeleteRule="CASCADE")]
		public supplier supplier
		{
			get
			{
				return this._supplier.Entity;
			}
			set
			{
				supplier previousValue = this._supplier.Entity;
				if (((previousValue != value) 
							|| (this._supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._supplier.Entity = null;
						previousValue.shippeds.Remove(this);
					}
					this._supplier.Entity = value;
					if ((value != null))
					{
						value.shippeds.Add(this);
						this._supplier_id = value.id_supplier;
					}
					else
					{
						this._supplier_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("supplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_shipped_details(shipped_detail entity)
		{
			this.SendPropertyChanging();
			entity.shipped = this;
		}
		
		private void detach_shipped_details(shipped_detail entity)
		{
			this.SendPropertyChanging();
			entity.shipped = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.shipped_details")]
	public partial class shipped_detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _shipped_id;
		
		private string _item_name;
		
		private System.Nullable<decimal> _item_price;
		
		private System.Nullable<int> _item_qty;
		
		private System.Nullable<decimal> _total;
		
		private EntityRef<shipped> _shipped;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onshipped_idChanging(System.Nullable<int> value);
    partial void Onshipped_idChanged();
    partial void Onitem_nameChanging(string value);
    partial void Onitem_nameChanged();
    partial void Onitem_priceChanging(System.Nullable<decimal> value);
    partial void Onitem_priceChanged();
    partial void Onitem_qtyChanging(System.Nullable<int> value);
    partial void Onitem_qtyChanged();
    partial void OntotalChanging(System.Nullable<decimal> value);
    partial void OntotalChanged();
    #endregion
		
		public shipped_detail()
		{
			this._shipped = default(EntityRef<shipped>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shipped_id", DbType="Int")]
		public System.Nullable<int> shipped_id
		{
			get
			{
				return this._shipped_id;
			}
			set
			{
				if ((this._shipped_id != value))
				{
					if (this._shipped.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onshipped_idChanging(value);
					this.SendPropertyChanging();
					this._shipped_id = value;
					this.SendPropertyChanged("shipped_id");
					this.Onshipped_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_name", DbType="NVarChar(50)")]
		public string item_name
		{
			get
			{
				return this._item_name;
			}
			set
			{
				if ((this._item_name != value))
				{
					this.Onitem_nameChanging(value);
					this.SendPropertyChanging();
					this._item_name = value;
					this.SendPropertyChanged("item_name");
					this.Onitem_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_price", DbType="Money")]
		public System.Nullable<decimal> item_price
		{
			get
			{
				return this._item_price;
			}
			set
			{
				if ((this._item_price != value))
				{
					this.Onitem_priceChanging(value);
					this.SendPropertyChanging();
					this._item_price = value;
					this.SendPropertyChanged("item_price");
					this.Onitem_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_qty", DbType="Int")]
		public System.Nullable<int> item_qty
		{
			get
			{
				return this._item_qty;
			}
			set
			{
				if ((this._item_qty != value))
				{
					this.Onitem_qtyChanging(value);
					this.SendPropertyChanging();
					this._item_qty = value;
					this.SendPropertyChanged("item_qty");
					this.Onitem_qtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total", DbType="Money")]
		public System.Nullable<decimal> total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this.OntotalChanging(value);
					this.SendPropertyChanging();
					this._total = value;
					this.SendPropertyChanged("total");
					this.OntotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="shipped_shipped_detail", Storage="_shipped", ThisKey="shipped_id", OtherKey="id_shipped", IsForeignKey=true, DeleteRule="CASCADE")]
		public shipped shipped
		{
			get
			{
				return this._shipped.Entity;
			}
			set
			{
				shipped previousValue = this._shipped.Entity;
				if (((previousValue != value) 
							|| (this._shipped.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._shipped.Entity = null;
						previousValue.shipped_details.Remove(this);
					}
					this._shipped.Entity = value;
					if ((value != null))
					{
						value.shipped_details.Add(this);
						this._shipped_id = value.id_shipped;
					}
					else
					{
						this._shipped_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("shipped");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.suppliers")]
	public partial class supplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_supplier;
		
		private string _name;
		
		private string _email;
		
		private string _phone;
		
		private string _cellphone;
		
		private string _other_detils;
		
		private EntitySet<item_supplier> _item_suppliers;
		
		private EntitySet<shipped> _shippeds;
		
		private EntitySet<suppliers_address> _suppliers_addresses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_supplierChanging(int value);
    partial void Onid_supplierChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OncellphoneChanging(string value);
    partial void OncellphoneChanged();
    partial void Onother_detilsChanging(string value);
    partial void Onother_detilsChanged();
    #endregion
		
		public supplier()
		{
			this._item_suppliers = new EntitySet<item_supplier>(new Action<item_supplier>(this.attach_item_suppliers), new Action<item_supplier>(this.detach_item_suppliers));
			this._shippeds = new EntitySet<shipped>(new Action<shipped>(this.attach_shippeds), new Action<shipped>(this.detach_shippeds));
			this._suppliers_addresses = new EntitySet<suppliers_address>(new Action<suppliers_address>(this.attach_suppliers_addresses), new Action<suppliers_address>(this.detach_suppliers_addresses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_supplier", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_supplier
		{
			get
			{
				return this._id_supplier;
			}
			set
			{
				if ((this._id_supplier != value))
				{
					this.Onid_supplierChanging(value);
					this.SendPropertyChanging();
					this._id_supplier = value;
					this.SendPropertyChanged("id_supplier");
					this.Onid_supplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(50)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cellphone", DbType="VarChar(50)")]
		public string cellphone
		{
			get
			{
				return this._cellphone;
			}
			set
			{
				if ((this._cellphone != value))
				{
					this.OncellphoneChanging(value);
					this.SendPropertyChanging();
					this._cellphone = value;
					this.SendPropertyChanged("cellphone");
					this.OncellphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_other_detils", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string other_detils
		{
			get
			{
				return this._other_detils;
			}
			set
			{
				if ((this._other_detils != value))
				{
					this.Onother_detilsChanging(value);
					this.SendPropertyChanging();
					this._other_detils = value;
					this.SendPropertyChanged("other_detils");
					this.Onother_detilsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="supplier_item_supplier", Storage="_item_suppliers", ThisKey="id_supplier", OtherKey="supplier_id")]
		public EntitySet<item_supplier> item_suppliers
		{
			get
			{
				return this._item_suppliers;
			}
			set
			{
				this._item_suppliers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="supplier_shipped", Storage="_shippeds", ThisKey="id_supplier", OtherKey="supplier_id")]
		public EntitySet<shipped> shippeds
		{
			get
			{
				return this._shippeds;
			}
			set
			{
				this._shippeds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="supplier_suppliers_address", Storage="_suppliers_addresses", ThisKey="id_supplier", OtherKey="supplier_id")]
		public EntitySet<suppliers_address> suppliers_addresses
		{
			get
			{
				return this._suppliers_addresses;
			}
			set
			{
				this._suppliers_addresses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_item_suppliers(item_supplier entity)
		{
			this.SendPropertyChanging();
			entity.supplier = this;
		}
		
		private void detach_item_suppliers(item_supplier entity)
		{
			this.SendPropertyChanging();
			entity.supplier = null;
		}
		
		private void attach_shippeds(shipped entity)
		{
			this.SendPropertyChanging();
			entity.supplier = this;
		}
		
		private void detach_shippeds(shipped entity)
		{
			this.SendPropertyChanging();
			entity.supplier = null;
		}
		
		private void attach_suppliers_addresses(suppliers_address entity)
		{
			this.SendPropertyChanging();
			entity.supplier = this;
		}
		
		private void detach_suppliers_addresses(suppliers_address entity)
		{
			this.SendPropertyChanging();
			entity.supplier = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.suppliers_addresses")]
	public partial class suppliers_address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_suppliers_address;
		
		private System.Nullable<int> _address_id;
		
		private System.Nullable<int> _supplier_id;
		
		private string _address_type_code;
		
		private System.Nullable<System.DateTime> _date_address_from;
		
		private System.Nullable<System.DateTime> _date_address_to;
		
		private EntityRef<addresse_type> _addresse_type;
		
		private EntityRef<address> _address;
		
		private EntityRef<supplier> _supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_suppliers_addressChanging(int value);
    partial void Onid_suppliers_addressChanged();
    partial void Onaddress_idChanging(System.Nullable<int> value);
    partial void Onaddress_idChanged();
    partial void Onsupplier_idChanging(System.Nullable<int> value);
    partial void Onsupplier_idChanged();
    partial void Onaddress_type_codeChanging(string value);
    partial void Onaddress_type_codeChanged();
    partial void Ondate_address_fromChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_address_fromChanged();
    partial void Ondate_address_toChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_address_toChanged();
    #endregion
		
		public suppliers_address()
		{
			this._addresse_type = default(EntityRef<addresse_type>);
			this._address = default(EntityRef<address>);
			this._supplier = default(EntityRef<supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_suppliers_address", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_suppliers_address
		{
			get
			{
				return this._id_suppliers_address;
			}
			set
			{
				if ((this._id_suppliers_address != value))
				{
					this.Onid_suppliers_addressChanging(value);
					this.SendPropertyChanging();
					this._id_suppliers_address = value;
					this.SendPropertyChanged("id_suppliers_address");
					this.Onid_suppliers_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address_id", DbType="Int")]
		public System.Nullable<int> address_id
		{
			get
			{
				return this._address_id;
			}
			set
			{
				if ((this._address_id != value))
				{
					if (this._address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onaddress_idChanging(value);
					this.SendPropertyChanging();
					this._address_id = value;
					this.SendPropertyChanged("address_id");
					this.Onaddress_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplier_id", DbType="Int")]
		public System.Nullable<int> supplier_id
		{
			get
			{
				return this._supplier_id;
			}
			set
			{
				if ((this._supplier_id != value))
				{
					if (this._supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsupplier_idChanging(value);
					this.SendPropertyChanging();
					this._supplier_id = value;
					this.SendPropertyChanged("supplier_id");
					this.Onsupplier_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address_type_code", DbType="Char(4)")]
		public string address_type_code
		{
			get
			{
				return this._address_type_code;
			}
			set
			{
				if ((this._address_type_code != value))
				{
					if (this._addresse_type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onaddress_type_codeChanging(value);
					this.SendPropertyChanging();
					this._address_type_code = value;
					this.SendPropertyChanged("address_type_code");
					this.Onaddress_type_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_address_from", DbType="Date")]
		public System.Nullable<System.DateTime> date_address_from
		{
			get
			{
				return this._date_address_from;
			}
			set
			{
				if ((this._date_address_from != value))
				{
					this.Ondate_address_fromChanging(value);
					this.SendPropertyChanging();
					this._date_address_from = value;
					this.SendPropertyChanged("date_address_from");
					this.Ondate_address_fromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_address_to", DbType="Date")]
		public System.Nullable<System.DateTime> date_address_to
		{
			get
			{
				return this._date_address_to;
			}
			set
			{
				if ((this._date_address_to != value))
				{
					this.Ondate_address_toChanging(value);
					this.SendPropertyChanging();
					this._date_address_to = value;
					this.SendPropertyChanged("date_address_to");
					this.Ondate_address_toChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="addresse_type_suppliers_address", Storage="_addresse_type", ThisKey="address_type_code", OtherKey="address_type_code", IsForeignKey=true, DeleteRule="CASCADE")]
		public addresse_type addresse_type
		{
			get
			{
				return this._addresse_type.Entity;
			}
			set
			{
				addresse_type previousValue = this._addresse_type.Entity;
				if (((previousValue != value) 
							|| (this._addresse_type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._addresse_type.Entity = null;
						previousValue.suppliers_addresses.Remove(this);
					}
					this._addresse_type.Entity = value;
					if ((value != null))
					{
						value.suppliers_addresses.Add(this);
						this._address_type_code = value.address_type_code;
					}
					else
					{
						this._address_type_code = default(string);
					}
					this.SendPropertyChanged("addresse_type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="address_suppliers_address", Storage="_address", ThisKey="address_id", OtherKey="id_address", IsForeignKey=true, DeleteRule="CASCADE")]
		public address address
		{
			get
			{
				return this._address.Entity;
			}
			set
			{
				address previousValue = this._address.Entity;
				if (((previousValue != value) 
							|| (this._address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._address.Entity = null;
						previousValue.suppliers_addresses.Remove(this);
					}
					this._address.Entity = value;
					if ((value != null))
					{
						value.suppliers_addresses.Add(this);
						this._address_id = value.id_address;
					}
					else
					{
						this._address_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="supplier_suppliers_address", Storage="_supplier", ThisKey="supplier_id", OtherKey="id_supplier", IsForeignKey=true, DeleteRule="CASCADE")]
		public supplier supplier
		{
			get
			{
				return this._supplier.Entity;
			}
			set
			{
				supplier previousValue = this._supplier.Entity;
				if (((previousValue != value) 
							|| (this._supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._supplier.Entity = null;
						previousValue.suppliers_addresses.Remove(this);
					}
					this._supplier.Entity = value;
					if ((value != null))
					{
						value.suppliers_addresses.Add(this);
						this._supplier_id = value.id_supplier;
					}
					else
					{
						this._supplier_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("supplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
